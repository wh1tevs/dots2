#!/bin/bash

set -euo pipefail

ACTION=${1:-open}
shift || true

COMMAND=""
CLS_RE=""
NAME=""

get_win_json() {
  hyprctl clients -j | jq -e --arg cls "$CLS_RE" '.[] | select(.class | test($cls))' 2>/dev/null || true
}

get_win_addr() {
  get_win_json | jq -er '.address' 2>/dev/null || true
}

get_win_workspace() {
  get_win_json | jq -er '.workspace.name' 2>/dev/null || true
}

get_active_workspace() {
  hyprctl activeworkspace -j | jq -er '.name'
}

open() {
  local addr="$(get_win_addr)"
  local workspace="$(get_win_workspace)"
  local target_workspace="special:$NAME"
  local tag="$NAME"

  if [[ -z $addr || "$workspace" == "$target_workspace" ]]; then
    hyprctl dispatch togglespecialworkspace "$NAME"
  fi

  if [[ -z "$addr" ]]; then
    eval "$COMMAND" &

    for _ in {1..50}; do
      sleep 0.1
      addr="$(get_win_addr)"
      [[ -n "$addr" ]] && break
    done

    hyprctl --batch "dispatch tagwindow +$tag address:$addr; dispatch movetoworkspacesilent $target_workspace,tag:$tag"
  fi

  if [[ "$workspace" != "$target_workspace" ]]; then
    hyprctl dispatch focuswindow "tag:$tag"
  fi

  exit 0
}

move() {
  local selector="$1"
  local target_workspace="$2"

  hyprctl --batch "dispatch movetoworkspace $target_workspace, $selector; dispatch focuswindow $selector"
}

while getopts "c:C:N:" opt; do
  case "$opt" in
  c) COMMAND="$OPTARG" ;;
  C) CLS_RE="$OPTARG" ;;
  N) NAME="$OPTARG" ;;
  *) ;;
  esac
done

# [[ $ACTION == "open" && (-z $COMMAND || -z $CLS_RE || -z $NAME) ]] && exit 1

case "$ACTION" in
move) move "tag:$NAME" "special:$NAME" ;;
*) open ;;
esac

# vim: ft=bash
